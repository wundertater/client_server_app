"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –∫–∞—Ñ–µ–¥—Ä–∞–º–∏ –∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ)"""
import asyncio

from sqlalchemy import select

from server.src.database import async_session_maker
from server.src.models.department import Department
from server.src.models.subject import Subject

test_entries = {
    "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞": [
        "–ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö",
        "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã",
        "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏",
        "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
        "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç",
        "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ",
        "–¢–µ–æ—Ä–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π",
    ],
    "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞": [
        "–õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞",
        "–ú–∞—Ç–∞–Ω–∞–ª–∏–∑",
        "–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è",
        "–¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π",
        "–ß–∏—Å–ª–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã",
    ],
    "–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è —Ñ–∏–∑–∏–∫–∞": [
        "–ö–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞",
        "–¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞",
        "–§–∏–∑–∏–∫–∞ —Ç–≤–µ—Ä–¥–æ–≥–æ —Ç–µ–ª–∞",
        "–û–ø—Ç–∏–∫–∞",
    ],
    "–≠–∫–æ–Ω–æ–º–∏–∫–∞": [
        "–ú–∏–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏–∫–∞",
        "–ú–∞–∫—Ä–æ—ç–∫–æ–Ω–æ–º–∏–∫–∞",
        "–≠–∫–æ–Ω–æ–º–µ—Ç—Ä–∏–∫–∞",
        "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —É—á–µ—Ç",
        "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥",
    ],
    "–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è": [
        "–£–≥–æ–ª–æ–≤–Ω–æ–µ –ø—Ä–∞–≤–æ",
        "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ",
        "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ",
        "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ –ø—Ä–∞–≤–æ",
        "–¢–µ–æ—Ä–∏—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ –∏ –ø—Ä–∞–≤–∞",
        "–ü—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ä–≥–∞–Ω—ã",
    ],
    "–§–∏–ª–æ–ª–æ–≥–∏—è": [
        "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–æ–≤–µ–¥–µ–Ω–∏–µ",
        "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫",
        "–°—Ç–∏–ª–∏—Å—Ç–∏–∫–∞",
        "–¢–µ–æ—Ä–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞",
        "–ò—Å—Ç–æ—Ä–∏—è —è–∑—ã–∫–∞",
    ],
    "–ò—Å—Ç–æ—Ä–∏—è": [
        "–ò—Å—Ç–æ—Ä–∏—è –î—Ä–µ–≤–Ω–µ–≥–æ –º–∏—Ä–∞",
        "–ò—Å—Ç–æ—Ä–∏—è –°—Ä–µ–¥–Ω–∏—Ö –≤–µ–∫–æ–≤",
        "–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏",
        "–ù–æ–≤–µ–π—à–∞—è –∏—Å—Ç–æ—Ä–∏—è",
        "–ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤–µ–¥–µ–Ω–∏–µ",
    ],
    "–ë–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è": [
        "–ú–æ–ª–µ–∫—É–ª—è—Ä–Ω–∞—è –±–∏–æ–ª–æ–≥–∏—è",
        "–ì–µ–Ω–µ—Ç–∏–∫–∞",
        "–ú–∏–∫—Ä–æ–±–∏–æ–ª–æ–≥–∏—è",
        "–ë–∏–æ—Ö–∏–º–∏—è",
        "–ö–ª–µ—Ç–æ—á–Ω–∞—è –∏–Ω–∂–µ–Ω–µ—Ä–∏—è",
        "–ò–º–º—É–Ω–æ–ª–æ–≥–∏—è",
        "–≠–∫–æ–ª–æ–≥–∏—è",
    ],
    "–ú–µ–¥–∏—Ü–∏–Ω–∞": [
        "–ê–Ω–∞—Ç–æ–º–∏—è",
        "–§–∏–∑–∏–æ–ª–æ–≥–∏—è",
        "–§–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è",
        "–ü–∞—Ç–æ–ª–æ–≥–∏—è",
        "–•–∏—Ä—É—Ä–≥–∏—è",
        "–ü–µ–¥–∏–∞—Ç—Ä–∏—è",
        "–ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏—è",
        "–ù–µ–≤—Ä–æ–ª–æ–≥–∏—è",
        "–ê–Ω–µ—Å—Ç–µ–∑–∏–æ–ª–æ–≥–∏—è",
    ],
    "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è": [
        "–û–±—â–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è",
        "–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è",
        "–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è",
        "–ü—Å–∏—Ö–æ–¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞",
        "–í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è",
    ],
}


async def create_test_data():
    async with async_session_maker() as session:
        async with session.begin():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞—Ñ–µ–¥—Ä—ã
            result = await session.execute(select(Department))
            existing_departments = result.scalars().all()

            if existing_departments:
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ.")
                return

            print("üì¶ –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ñ–µ–¥—Ä—ã –∏ –ø—Ä–µ–¥–º–µ—Ç—ã...")

            for dep_name, subjects in test_entries.items():
                department = Department(name=dep_name)
                department.subjects = [Subject(name=s) for s in subjects]
                session.add(department)

            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")


if __name__ == "__main__":
    asyncio.run(create_test_data())
